import { BufferedLog, Instrumentation, InstrumentedAppMethods, LogCollector, MetricsCollector, Nextgen, PayloadProvider, Schema, SchematizedPayload } from '../interfaces';
import { AutomaticClickTracker } from './AutomaticClickTracker';
import { SchematizedData } from 'o11y/shared';
import { LogCollectorOptions } from 'src/interfaces/LogCollectorOptions';
import { LogPromptListener } from 'src/shared/TypeDefinitions';
export declare class NextgenImpl implements Nextgen {
    private readonly _logCollectors;
    private readonly _instruments;
    private _sequence;
    private _appInstr;
    private _autoClickTracker;
    private _metricsCollector;
    private _appPayloadProvider;
    private _pagePayloadProvider;
    private _forceDisabledLogCollectors;
    private _logCollectorFailures;
    private static _collectorFailureLimit;
    private _isBufferingEnabled;
    private _buffer;
    private readonly _logCollectionListeners;
    get pagePayloadProvider(): PayloadProvider;
    set pagePayloadProvider(provider: PayloadProvider);
    get appPayloadProvider(): PayloadProvider;
    set appPayloadProvider(provider: PayloadProvider);
    registerApp(name: string, enableBuffering?: boolean): InstrumentedAppMethods;
    getInstrumentation(name: string): Instrumentation;
    get appName(): string;
    addLog(loggerName: string, schema: Schema, data: SchematizedData, timestamp: number, rootId: string, pagePayload: SchematizedPayload, appPayload: SchematizedPayload): number;
    getBuffer(): BufferedLog[];
    disableBuffering(): void;
    getClickTracker(): AutomaticClickTracker;
    getRootActivityId(): string;
    isRootActivitySampled(): boolean;
    activateClickTracker(): void;
    deactivateClickTracker(): void;
    registerLogCollector(collector: LogCollector, options?: LogCollectorOptions): void;
    registerMetricsCollector(collector: MetricsCollector): void;
    private getAllUpCounters;
    private getAllValueRecorders;
    registerForLogPrompt(listener: LogPromptListener): void;
    promptLogCollection(reason: string): void;
}
