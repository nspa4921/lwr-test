// TODO: This is a temporal workaround until https://github.com/salesforce/lwc/pull/2083 is sorted
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
import { hydrateComponent } from 'lwc';
export function toKebabCase(specifier) {
  return specifier.replace(/\/v\/[a-zA-Z0-9-_.]+$/, '').replace('/', '-').replace(/([A-Z])/g, c => `-${c.toLowerCase()}`);
}
/**
 * This method maps between attribute names
 * and the corresponding props name.
 */

const CAMEL_REGEX = /-([a-z])/g;
export function getPropFromAttrName(propName) {
  return propName.replace(CAMEL_REGEX, g => g[1].toUpperCase());
}
/**
 * Hydrate the given components component(s).
 * @param components - An array of arrays, each one holding a pair of
 *                      bare specifier and corresponding LightningElement constructor
 * @example - [['x/appRoot', appCtor], ['x/nav', navCtor]]
 */

export function init(components) {
  if (typeof document !== 'undefined') {
    components.forEach(([moduleSpecifier, ctor]) => {
      // Kebab-case the specifier
      const elementName = toKebabCase(moduleSpecifier);
      const customElements = document.querySelectorAll(elementName);
      customElements.forEach(customElement => {
        hydrateComponent(customElement, ctor, {});
      });
    });
  }
}