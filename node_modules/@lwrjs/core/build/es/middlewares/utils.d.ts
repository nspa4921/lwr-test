/// <reference types="node" />
import http from 'http';
import { EnvironmentConfig } from '@lwrjs/types';
import qs from 'qs';
/**
 * Create a status object Express can return when there is an error
 *
 * @param name - string name of the problem module/resource
 * @param error - an Error/Diagnostic object; thrown from try/catch
 */
export declare function createReturnStatus(name: string, error: unknown): {
    status: number;
    message: string;
};
interface Params {
    [key: string]: string;
}
export declare function getRequestProperties(pattern: string, req: http.IncomingMessage): {
    url: string;
    params: Params;
    query: qs.ParsedQs;
} | undefined;
/**
 * Check if the target environment is supported by the application
 *
 * @param environmentConfig - environment property from app config
 * @param targetEnvironment - environment value from module uri
 * @returns boolean
 */
export declare function isSupportedEnvironment(environmentConfig: EnvironmentConfig, targetEnvironment: string): boolean;
export {};
//# sourceMappingURL=utils.d.ts.map