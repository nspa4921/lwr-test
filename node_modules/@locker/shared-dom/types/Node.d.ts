export declare function NodeAppendChild(node: Node, childNode: ChildNode | DocumentFragment): ReturnType<typeof Node.prototype.appendChild>;
export declare function NodeChildNodesGetter(node: Node): typeof Node.prototype.childNodes;
export declare function NodeClone(node: Node, deep?: boolean): ReturnType<typeof Node.prototype.cloneNode>;
export declare function NodeFirstChildGetter(node: Node): typeof Node.prototype.firstChild;
export declare function NodeIsEqualNode(node: Node, otherNode: Node): ReturnType<typeof Node.prototype.isEqualNode>;
export declare function NodeNameGetter(node: Node): typeof Node.prototype.nodeName;
export declare function NodeOwnerDocumentGetter(node: Node): typeof Node.prototype.ownerDocument;
//# sourceMappingURL=Node.d.ts.map