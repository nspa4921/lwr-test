import { Config, HookEvent } from 'dompurify';
import * as CONFIG from './config';
import { sanitizer as getSanitizerForConfig } from './dompurify-wrapper';
export { CONFIG, getSanitizerForConfig as sanitizer };
export declare function blobSanitizer(): ReturnType<typeof getSanitizerForConfig>;
export declare function svgSanitizer(): ReturnType<typeof getSanitizerForConfig>;
export declare function sanitize(dirty: string): string;
export declare function sanitizeDocument(doc: Document): Document;
export declare function sanitizeHrefAttributeHook(node: Node, data: HookEvent, _config: Config): HookEvent;
export declare function sanitizeSvgHref(url: string): string;
export declare function sanitizeSvgInnerHtml(stringOrSvg: string | SVGElement, dirty?: string): string;
export declare function sanitizeSvgTextReturnDOM(dirty: string): DocumentFragment;
export declare function allowCustomTagHook(node: Element, data: HookEvent, _config: Config): void;
export * from './types';
//# sourceMappingURL=index.d.ts.map