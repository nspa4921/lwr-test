import { Instrumentation } from '@locker/instrumentation';
import { GlobalObject } from '@locker/shared-dom/types';
declare enum CookieSameSite {
    'strict' = 0,
    'lax' = 1,
    'none' = 2
}
export declare type CookieListItem = {
    name: string;
    value: string;
    domain?: string;
    path: string;
    expires?: number;
    secure: boolean;
    sameSite: CookieSameSite;
};
export declare type Distortion = (...arg: any) => any;
export declare type DistortionFactory = (globalObject: GlobalObject, options: FactoryOptions) => DistortionMapPair;
export declare type DistortionMap = WeakMap<RawValue, GlobalDistortion>;
export declare type DistortionMapConfig = {
    instrumentation: Instrumentation;
    sandboxType: SandboxType;
    verboseInstrumentation?: boolean;
};
export declare type DistortionMapEntry = [RawValue, Distortion];
export declare type DistortionMapPair = DistortionMapEntry | null;
export declare type DistortionMapEntries = DistortionMapEntry[];
export declare type Evaluator = (key: SandboxKey, sourceText: any, context?: any, endowments?: object) => void;
export interface FactoryOptions {
    evaluator: Evaluator;
    instrumentation?: Instrumentation;
    key: SandboxKey;
    sandboxType: SandboxType;
}
export declare type GlobalDistortion = (options: FactoryOptions) => Distortion;
export declare type NamespaceDistortion = (key: SandboxKey, evaluator: Evaluator) => Distortion;
export declare type NodeNameMapSetNamedItem = (attr: Attr) => Attr | null;
export declare type RawValue = any;
export declare type SandboxKey = string;
export declare enum SandboxType {
    External = 0,
    Internal = 1
}
export interface StorageMeta {
    proxy: Storage;
    storage: Storage;
    storageRootKey: string;
}
export {};
//# sourceMappingURL=types.d.ts.map