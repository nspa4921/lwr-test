export declare const StringCtor: StringConstructor;
export declare function capitalizeFirstChar(string: string): string;
export declare function enquote(string: string, quoteChar?: string): string;
export declare function escapeQuotes(string: string, quoteChar?: string): string;
export declare function isConvertibleToString(value: any): boolean;
export declare function isStringObject(value: any): boolean;
export declare function StringCharCodeAt(string: string, index: number): ReturnType<typeof String.prototype.charCodeAt>;
export declare function StringIncludes(string: string, ...args: Parameters<typeof String.prototype.includes>): ReturnType<typeof String.prototype.includes>;
export declare function StringMatch(string: string, regexp: RegExp): ReturnType<typeof String.prototype.match>;
export declare function StringReplace(string: string, pattern: RegExp | string, replacement: Function | string): ReturnType<typeof String.prototype.replace>;
export declare function StringSlice(string: string, ...args: Parameters<typeof String.prototype.slice>): ReturnType<typeof String.prototype.slice>;
export declare function StringSplit(string: string, ...args: any[]): ReturnType<typeof String.prototype.split>;
export declare function StringStartsWith(string: string, ...args: Parameters<typeof String.prototype.startsWith>): ReturnType<typeof String.prototype.startsWith>;
export declare function StringToLowerCase(string: string): ReturnType<typeof String.prototype.toLowerCase>;
export declare function StringToUpperCase(string: string): ReturnType<typeof String.prototype.toUpperCase>;
export declare function toString(value: any): string;
export declare function toStringIfNotNullOrUndefined(value: any): string | null | undefined;
//# sourceMappingURL=String.d.ts.map